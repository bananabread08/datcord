{"version":3,"file":"static/js/490.ff7e3bd7.chunk.js","mappings":"gTAae,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,CAC/BG,MAAO,GACPC,SAAU,GACVC,MAAO,KACPC,SAAS,IAJX,eAAOC,EAAP,KAAaC,EAAb,KAMQC,GAAWC,EAAAA,EAAAA,KAAXD,OACAN,EAAoCI,EAApCJ,MAAOC,EAA6BG,EAA7BH,SAAUC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAE1BK,EAAe,SAACC,GACpBJ,GAAQ,kBAAKD,GAAN,cAAaK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAGzCC,EAAY,mCAAG,WAAOJ,GAAP,8EACnBA,EAAEK,iBACFT,GAAQ,kBAAKD,GAAN,IAAYD,SAAS,KAFT,kBAICG,EAAON,EAAOC,GAJf,cAIXc,EAJW,iBAKXC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASH,EAAII,KAAKC,KAAM,CAC3CA,IAAKL,EAAII,KAAKC,IACdpB,MAAAA,EACAqB,UAAWC,EAAAA,GAAAA,SAAmB,IAAIC,MAClCZ,MC/Baa,EAAAA,EAAAA,IAAqB,CACtCC,aAAc,CAACC,EAAAA,GAAYC,EAAAA,MD+BvBC,UAAU,IAVK,OAYjBvB,GAAQ,kBAAKD,GAAN,IAAYD,SAAS,KAC5BR,EAAS,SAbQ,kDAejBU,GAAQ,kBAAKD,GAAN,IAAYF,MAAO,KAAI2B,QAAQC,UAAU,MAf/B,0DAAH,sDAmBlB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,SAAUlB,EAAtB,WACE,+CACA,0BACE,kBACEmB,KAAK,QACLC,SAAUzB,EACV0B,YAAY,QACZvB,KAAK,aAGT,iBAAKwB,UAAU,iBAAf,WACE,kBACEH,KAAMlC,EAAa,OAAS,WAC5BmC,SAAUzB,EACV0B,YAAY,WACZvB,KAAK,cAEP,SAAC,KAAD,CACEqB,KAAK,SACLI,QAAS,kBAAMrC,GAAc,SAACsC,GAAD,OAAgBA,MAC7CF,UAAU,WAHZ,sBAQF,0BACE,SAAC,KAAD,CAAcG,QAAM,EAACC,SAAUpC,EAA/B,SACGA,EAAU,YAAc,gBAG7B,0BACE,oDAC2B,KACzB,SAAC,KAAD,CAAMqC,GAAG,SAAT,UACE,mBAAQR,KAAK,SAASG,UAAU,eAAhC,2BAMLjC,IAAS,uBAAIA,a,qKExFlBuC,EAAgBC,EAAAA,GAAAA,QAAH,8JAMOC,GAGpBC,EAAYF,EAAAA,GAAAA,IAAH,gOAGO,SAACG,GAAD,OAAWA,EAAMC,MAAMC,QAUvCC,EAAaN,EAAAA,GAAAA,KAAH,gqBAgBQ,SAACG,GAAD,OAAWA,EAAMC,MAAMG,QAClC,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,QACZ,SAACL,GAAD,OAAWA,EAAMC,MAAMK,aA0BzCC,EAAeV,EAAAA,GAAAA,OAAH,uOAGI,SAACG,GAAD,OAAYA,EAAMP,OAAS,UAAYO,EAAMC,MAAMI,QAC9D,SAACL,GAAD,OAAYA,EAAMP,OAAS,OAAS,UAEpC,SAACO,GAAD,OAAYA,EAAMP,OAAS,OAASO,EAAMC,MAAMC,S","sources":["pages/Register/Register.js","generateName.js","styles/sharedStyles.js"],"sourcesContent":["import { useNavigate, Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useUserAuth } from '../../context/UserAuthContext';\nimport { setDoc, doc, Timestamp } from 'firebase/firestore';\nimport { db } from '../../firebase-config';\nimport {\n  StyledSection,\n  StyledButton,\n  StyledForm,\n  StyledDiv,\n} from '../../styles/sharedStyles';\nimport generateName from '../../generateName';\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const [visibility, setVisibility] = useState(false);\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    error: null,\n    loading: false,\n  });\n  const { signUp } = useUserAuth();\n  const { email, password, error, loading } = data;\n\n  const handleChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setData({ ...data, loading: true });\n    try {\n      const res = await signUp(email, password);\n      await setDoc(doc(db, 'users', res.user.uid), {\n        uid: res.user.uid,\n        email,\n        createdAt: Timestamp.fromDate(new Date()),\n        name: generateName(),\n        isOnline: true,\n      });\n      setData({ ...data, loading: false });\n      navigate('/home');\n    } catch (err) {\n      setData({ ...data, error: err.message.substring(9) });\n    }\n  };\n\n  return (\n    <StyledSection>\n      <StyledDiv>\n        <StyledForm onSubmit={handleSubmit}>\n          <h1>Create an Account</h1>\n          <div>\n            <input\n              type=\"email\"\n              onChange={handleChange}\n              placeholder=\"Email\"\n              name=\"email\"\n            />\n          </div>\n          <div className=\"pass-container\">\n            <input\n              type={visibility ? 'text' : 'password'}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              name=\"password\"\n            />\n            <StyledButton\n              type=\"button\"\n              onClick={() => setVisibility((prevState) => !prevState)}\n              className=\"show-btn\"\n            >\n              Show\n            </StyledButton>\n          </div>\n          <div>\n            <StyledButton submit disabled={loading}>\n              {loading ? 'Loading..' : 'Register'}\n            </StyledButton>\n          </div>\n          <div>\n            <p>\n              Already have an account?{' '}\n              <Link to=\"/login\">\n                <button type=\"button\" className=\"redirect-btn\">\n                  Log In\n                </button>\n              </Link>\n            </p>\n          </div>\n          {error && <p>{error}</p>}\n        </StyledForm>\n      </StyledDiv>\n    </StyledSection>\n  );\n}\n","import {\n  uniqueNamesGenerator,\n  adjectives,\n  animals,\n} from 'unique-names-generator';\n\nexport default function generateName() {\n  const randomName = uniqueNamesGenerator({\n    dictionaries: [adjectives, animals],\n  });\n  return randomName;\n}\n","import styled from 'styled-components';\nimport mainbg from '../assets/mainbg.jpeg';\n\nconst StyledSection = styled.section`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-image: url(${mainbg});\n`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  max-width: 800px;\n  background-color: ${(props) => props.theme.body};\n  padding: 1.5rem;\n  gap: 1rem;\n  border-radius: 7px;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  min-width: 300px;\n  margin: 0 auto;\n  padding: 0.5rem;\n  label {\n    display: block;\n  }\n\n  h2 {\n    text-align: center;\n  }\n\n  input {\n    background-color: ${(props) => props.theme.form};\n    color: ${(props) => props.theme.text};\n    border: 1px solid ${(props) => props.theme.secondary};\n    font-size: 1.1rem;\n    width: 100%;\n    padding: 0.5rem;\n    border-radius: 7px;\n    &:focus {\n      outline: none;\n      border: 1px solid #5765f2;\n    }\n  }\n\n  .pass-container {\n    position: relative;\n  }\n  .show-btn {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n  }\n\n  .redirect-btn {\n    all: unset;\n    color: #5765f2;\n  }\n`;\n\nconst StyledButton = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: ${(props) => (props.submit ? '#5765f2' : props.theme.text)};\n  width: ${(props) => (props.submit ? '100%' : '60px')};\n  padding: 0.4rem;\n  color: ${(props) => (props.submit ? '#fff' : props.theme.body)};\n  border-radius: 5px;\n  font-weight: 700;\n\n  &:hover {\n    filter: brightness(0.7);\n  }\n`;\n\nexport { StyledSection, StyledButton, StyledForm, StyledDiv };\n"],"names":["Register","navigate","useNavigate","useState","visibility","setVisibility","email","password","error","loading","data","setData","signUp","useUserAuth","handleChange","e","target","name","value","handleSubmit","preventDefault","res","setDoc","doc","db","user","uid","createdAt","Timestamp","Date","uniqueNamesGenerator","dictionaries","adjectives","animals","isOnline","message","substring","onSubmit","type","onChange","placeholder","className","onClick","prevState","submit","disabled","to","StyledSection","styled","mainbg","StyledDiv","props","theme","body","StyledForm","form","text","secondary","StyledButton"],"sourceRoot":""}