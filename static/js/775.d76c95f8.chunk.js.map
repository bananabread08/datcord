{"version":3,"file":"static/js/775.d76c95f8.chunk.js","mappings":"uTAaMA,EAAaC,EAAAA,GAAAA,IAAH,mMAaD,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,CAC/BG,MAAO,GACPC,SAAU,GACVC,MAAO,KACPC,SAAS,IAJX,eAAOC,EAAP,KAAaC,EAAb,KAMA,GAAwBC,EAAAA,EAAAA,KAAhBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACNR,EAAoCI,EAApCJ,MAAOC,EAA6BG,EAA7BH,SAAUC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAE1BM,EAAe,SAACC,GACpBL,GAAQ,kBAAKD,GAAN,cAAaM,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAGzCC,EAAY,mCAAG,WAAOJ,GAAP,8EACnBA,EAAEK,iBACFV,GAAQ,kBAAKD,GAAN,IAAYD,SAAS,KAFT,kBAICK,EAAMR,EAAOC,GAJd,cAIXe,EAJW,iBAKXC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASH,EAAIT,KAAKa,KAAM,CAC9CC,UAAU,IANK,OAQjBhB,GAAQ,kBAAKD,GAAN,IAAYD,SAAS,KAC5BR,EAAS,SATQ,kDAWjBU,GAAQ,kBAAKD,GAAN,IAAYF,MAAO,KAAIoB,QAAQC,UAAU,MAX/B,0DAAH,sDAyBlB,OATAC,EAAAA,EAAAA,YAAU,WAMR,OAJA,WACE,GAAIjB,EAAaZ,EAAS,SAE5B8B,GACO,kBALK,QAMX,CAAClB,EAAMZ,KAGR,SAAC,KAAD,WACE,UAAC,KAAD,YACE,UAACH,EAAD,YACE,qCACA,4CACA,4CAEE,4DACA,4DACA,sDACA,6DAEF,0BACE,cAAGkC,KAAK,2CAAR,oCAMJ,UAAC,KAAD,CAAYC,SAAUb,EAAtB,WACE,0BACE,6CAEF,0BACE,kBACEc,KAAK,QACLC,SAAUpB,EACVqB,YAAY,QACZlB,KAAK,aAGT,iBAAKmB,UAAU,iBAAf,WACE,kBACEH,KAAM9B,EAAa,OAAS,WAC5B+B,SAAUpB,EACVqB,YAAY,WACZlB,KAAK,cAEP,SAAC,KAAD,CACEgB,KAAK,SACLI,QAAS,kBAAMjC,GAAc,SAACkC,GAAD,OAAgBA,MAC7CF,UAAU,WAHZ,sBAQF,0BACE,SAAC,KAAD,CAAcG,QAAM,EAACN,KAAK,SAASO,SAAUhC,EAA7C,SACGA,EAAU,YAAc,cAG7B,0BACE,4CACmB,KACjB,SAAC,KAAD,CAAMiC,GAAG,UAAT,UACE,mBAAQR,KAAK,SAASG,UAAU,eAAhC,6BAML7B,IAAS,uBAAIA,c,qKC9HlBmC,EAAgB5C,EAAAA,GAAAA,QAAH,8JAMO6C,GAGpBC,EAAY9C,EAAAA,GAAAA,IAAH,gOAGO,SAAC+C,GAAD,OAAWA,EAAMC,MAAMC,QAUvCC,EAAalD,EAAAA,GAAAA,KAAH,gqBAgBQ,SAAC+C,GAAD,OAAWA,EAAMC,MAAMG,QAClC,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,QACZ,SAACL,GAAD,OAAWA,EAAMC,MAAMK,aA0BzCC,EAAetD,EAAAA,GAAAA,OAAH,uOAGI,SAAC+C,GAAD,OAAYA,EAAMN,OAAS,UAAYM,EAAMC,MAAMI,QAC9D,SAACL,GAAD,OAAYA,EAAMN,OAAS,OAAS,UAEpC,SAACM,GAAD,OAAYA,EAAMN,OAAS,OAASM,EAAMC,MAAMC,S","sources":["pages/LogIn/LogIn.js","styles/sharedStyles.js"],"sourcesContent":["import { useNavigate, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useUserAuth } from '../../context/UserAuthContext';\nimport { updateDoc, doc } from 'firebase/firestore';\nimport { db } from '../../firebase-config';\nimport styled from 'styled-components';\nimport {\n  StyledSection,\n  StyledButton,\n  StyledForm,\n  StyledDiv,\n} from '../../styles/sharedStyles';\n\nconst WelcomeDiv = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n\n  a {\n    color: #5765f2;\n  }\n`;\n\nexport default function LogIn() {\n  const navigate = useNavigate();\n  const [visibility, setVisibility] = useState(false);\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    error: null,\n    loading: false,\n  });\n  const { user, logIn } = useUserAuth();\n  const { email, password, error, loading } = data;\n\n  const handleChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setData({ ...data, loading: true });\n    try {\n      const res = await logIn(email, password);\n      await updateDoc(doc(db, 'users', res.user.uid), {\n        isOnline: true,\n      });\n      setData({ ...data, loading: false });\n      navigate('/home');\n    } catch (err) {\n      setData({ ...data, error: err.message.substring(9) });\n    }\n  };\n\n  //reroute to home of user changes URL to login\n  useEffect(() => {\n    let unsub = true;\n    function goHome() {\n      if (user) return navigate('/home');\n    }\n    goHome();\n    return () => unsub;\n  }, [user, navigate]);\n\n  return (\n    <StyledSection>\n      <StyledDiv>\n        <WelcomeDiv>\n          <h1>Datcord</h1>\n          <p>A Discord Clone</p>\n          <ul>\n            Core Features:\n            <li> - Become a member of a server</li>\n            <li> - Create channels in a server</li>\n            <li> - Send messages to chat</li>\n            <li> - See who is online/offline</li>\n          </ul>\n          <div>\n            <a href=\"https://github.com/bananabread08/datcord\">\n              Check Repository\n            </a>\n          </div>\n        </WelcomeDiv>\n\n        <StyledForm onSubmit={handleSubmit}>\n          <div>\n            <h2>Welcome Back!</h2>\n          </div>\n          <div>\n            <input\n              type=\"Email\"\n              onChange={handleChange}\n              placeholder=\"Email\"\n              name=\"email\"\n            />\n          </div>\n          <div className=\"pass-container\">\n            <input\n              type={visibility ? 'text' : 'password'}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              name=\"password\"\n            />\n            <StyledButton\n              type=\"button\"\n              onClick={() => setVisibility((prevState) => !prevState)}\n              className=\"show-btn\"\n            >\n              Show\n            </StyledButton>\n          </div>\n          <div>\n            <StyledButton submit type=\"submit\" disabled={loading}>\n              {loading ? 'Loading..' : 'Log In'}\n            </StyledButton>\n          </div>\n          <div>\n            <p>\n              Need an account?{' '}\n              <Link to=\"/signup\">\n                <button type=\"button\" className=\"redirect-btn\">\n                  Register\n                </button>\n              </Link>\n            </p>\n          </div>\n          {error && <p>{error}</p>}\n        </StyledForm>\n      </StyledDiv>\n    </StyledSection>\n  );\n}\n","import styled from 'styled-components';\nimport mainbg from '../assets/mainbg.jpeg';\n\nconst StyledSection = styled.section`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-image: url(${mainbg});\n`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  max-width: 800px;\n  background-color: ${(props) => props.theme.body};\n  padding: 1.5rem;\n  gap: 1rem;\n  border-radius: 7px;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  min-width: 300px;\n  margin: 0 auto;\n  padding: 0.5rem;\n  label {\n    display: block;\n  }\n\n  h2 {\n    text-align: center;\n  }\n\n  input {\n    background-color: ${(props) => props.theme.form};\n    color: ${(props) => props.theme.text};\n    border: 1px solid ${(props) => props.theme.secondary};\n    font-size: 1.1rem;\n    width: 100%;\n    padding: 0.5rem;\n    border-radius: 7px;\n    &:focus {\n      outline: none;\n      border: 1px solid #5765f2;\n    }\n  }\n\n  .pass-container {\n    position: relative;\n  }\n  .show-btn {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n  }\n\n  .redirect-btn {\n    all: unset;\n    color: #5765f2;\n  }\n`;\n\nconst StyledButton = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: ${(props) => (props.submit ? '#5765f2' : props.theme.text)};\n  width: ${(props) => (props.submit ? '100%' : '60px')};\n  padding: 0.4rem;\n  color: ${(props) => (props.submit ? '#fff' : props.theme.body)};\n  border-radius: 5px;\n  font-weight: 700;\n\n  &:hover {\n    filter: brightness(0.7);\n  }\n`;\n\nexport { StyledSection, StyledButton, StyledForm, StyledDiv };\n"],"names":["WelcomeDiv","styled","LogIn","navigate","useNavigate","useState","visibility","setVisibility","email","password","error","loading","data","setData","useUserAuth","user","logIn","handleChange","e","target","name","value","handleSubmit","preventDefault","res","updateDoc","doc","db","uid","isOnline","message","substring","useEffect","goHome","href","onSubmit","type","onChange","placeholder","className","onClick","prevState","submit","disabled","to","StyledSection","mainbg","StyledDiv","props","theme","body","StyledForm","form","text","secondary","StyledButton"],"sourceRoot":""}